import requests from bs4 import BeautifulSoup def scrape_divar(city, query, max_results=10): """ اسکرپ داده‌های سایت دیوار برای شهر و موضوع خاص. پارامترها: city (str): نام شهر (انگلیسی) query (str): موضوع جستجو (فارسی) max_results (int): تعداد حداکثر آگهی‌ها خروجی: لیستی از آگهی‌های اسکرپ شده """ base_url = f"https://divar.ir/s/{city}/{query.replace(' ', '-')}" headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36' } response = requests.get(base_url, headers=headers) # بررسی وضعیت درخواست if response.status_code != 200: return f"خطا! کد وضعیت: {response.status_code}" # استخراج محتوای HTML soup = BeautifulSoup(response.text, "html.parser") # یافتن تمام کارت‌های آگهی ads = soup.find_all("div", class_="post-card-item") results = [] for ad in ads[:max_results]: # محدود کردن به تعداد نتایج خواسته‌شده try: # دریافت اطلاعات هر آگهی title = ad.find("h2", class_="kt-post-card__title").text.strip() description = ad.find("div", class_="kt-post-card__description").text.strip() link = "https://divar.ir" + ad.find("a", class_="kt-post-card__title-link")["href"] price = ad.find("div", class_="kt-post-card__description--price").text.strip() region = ad.find("div", class_="kt-post-card__bottom-description kt-post-card__bottom-description--second").text.strip() # ذخیره داده‌ها در دیکشنری results.append({ "title": title, "description": description, "region": region, # اضافه‌شده برای نمایش منطقه "link": link, "price": price }) except Exception as e: print(f"خطا در استخراج اطلاعات: {e}") continue return results # فراخوانی تابع برای جستجو در دیوار if __name__ == "__main__": city = "tehran" # نام شهر به انگلیسی query = "خودرو" # موضوع جستجو results = scrape_divar(city, query) # نمایش داده‌های استخراج‌شده for i, ad in enumerate(results): print(f"{i+1}. {ad['title']}") print(f" توضیحات: {ad['description']}") print(f" منطقه: {ad['region']}") print(f" قیمت: {ad['price']}") print(f" لینک: {ad['link']}") print("-" * 50) 
